---
openapi: 3.1.0

info:
  version: 0.0.0
  title: Couplet API
  description: Connect with other users through local events

paths:
  /events:
    get:
      summary: Get multiple events
      parameters:
        - name: limit
          in: query
          description: The number of events to return
          schema:
            type: integer
            format: uint8
            minimum: 1
            default: 10
            example: 20
        - name: offset
          in: query
          description: The number of events to skip
          schema:
            type: integer
            format: uint32
            default: 0
            example: 13
      responses:
        "200":
          description: Successfully retrieved events
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - name
                    - bio
                    - address
                    - images
                    - minPrice
                    - tags
                    - orgId
                  properties:
                    id:
                      type: string
                      format: uuid
                      example: 5e91507e-5630-4efd-9fd4-799178870b10
                    name:
                      type: string
                      minLength: 1
                      example: The Big Event
                    bio:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: Come to the Big Event and have a good time!
                    address:
                      type: string
                      minLength: 1
                      example: Frog Pond
                    images:
                      type: array
                      items:
                        type: string
                        format: uri
                        example: https://example.com/image.png
                      minItems: 4
                      maxItems: 4
                    externalLink:
                      type: string
                      format: uri
                      example: https://example.com
                    minPrice:
                      type: integer
                      format: uint8
                      minimum: 0
                    maxPrice:
                      type: integer
                      format: uint8
                      minimum: 0
                    tags:
                      type: array
                      maxItems: 5
                      items:
                        type: string
                        minLength: 1
                        maxLength: 255
                        example: arts
                    orgId:
                      type: string
                      format: uuid
                      example: 5e91507e-5630-4efd-9fd4-799178870b10
    post:
      summary: Create a new event
      requestBody:
        description: Event to create
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - bio
                - address
                - images
                - minPrice
                - tags
                - orgId
              properties:
                name:
                  type: string
                  minLength: 1
                  example: The Big Event
                bio:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: Come to the Big Event and have a good time!
                address:
                  type: string
                  minLength: 1
                  example: Frog Pond
                images:
                  type: array
                  items:
                    type: string
                    format: uri
                    example: https://example.com/image.png
                  minItems: 4
                  maxItems: 4
                minPrice:
                  type: integer
                  format: uint8
                  minimum: 0
                maxPrice:
                  type: integer
                  format: uint8
                  minimum: 0
                externalLink:
                  type: string
                  format: uri
                  example: https://example.com
                tags:
                  type: array
                  maxItems: 5
                  items:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: arts
                orgId:
                  type: string
                  format: uuid
                  example: 5e91507e-5630-4efd-9fd4-799178870b10
      responses:
        "201":
          description: Successfully created event
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - bio
                  - address
                  - images
                  - minPrice
                  - tags
                  - orgId
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
                  name:
                    type: string
                    minLength: 1
                    example: The Big Event
                  bio:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: Come to the Big Event and have a good time!
                  address:
                    type: string
                    example: Frog Pond
                  images:
                    type: array
                    items:
                      type: string
                      format: uri
                      example: https://example.com/image.png
                    minItems: 4
                    maxItems: 4
                  minPrice:
                    type: integer
                    format: uint8
                    minimum: 0
                  maxPrice:
                    type: integer
                    format: uint8
                    minimum: 0
                  externalLink:
                    type: string
                    format: uri
                    example: https://example.com
                  tags:
                    type: array
                    maxItems: 5
                    items:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: arts
                  orgId:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
        "400":
          $ref: "#/components/responses/BadRequest"
  /events/{id}:
    delete:
      summary: Delete an event by its event ID
      parameters:
        - name: id
          in: path
          description: ID of event to delete
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      responses:
        "200":
          description: Successfully deleted event
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - bio
                  - address
                  - images
                  - minPrice
                  - tags
                  - orgId
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
                  name:
                    type: string
                    minLength: 1
                    example: The Big Event
                  bio:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: Come to the Big Event and have a good time!
                  address:
                    type: string
                    minLength: 1
                    example: Frog Pond
                  images:
                    type: array
                    items:
                      type: string
                      format: uri
                      example: https://example.com/image.png
                    minItems: 4
                    maxItems: 4
                  minPrice:
                    type: integer
                    format: uint8
                    minimum: 0
                  maxPrice:
                    type: integer
                    format: uint8
                    minimum: 0
                  externalLink:
                    type: string
                    format: uri
                    example: https://example.com
                  tags:
                    type: array
                    maxItems: 5
                    items:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: arts
                  orgId:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
        "404":
          $ref: "#/components/responses/NotFound"
    get:
      summary: Get an event by its ID
      parameters:
        - name: id
          in: path
          description: ID of event to retrieve
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      responses:
        "200":
          description: Successfully retrieved event
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - bio
                  - address
                  - images
                  - minPrice
                  - tags
                  - orgId
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
                  name:
                    type: string
                    minLength: 1
                    example: The Big Event
                  bio:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: Come to the Big Event and have a good time!
                  address:
                    type: string
                    minLength: 1
                    example: Frog Pond
                  images:
                    type: array
                    items:
                      type: string
                      format: uri
                      example: https://example.com/image.png
                    minItems: 4
                    maxItems: 4
                  minPrice:
                    type: integer
                    format: uint8
                    minimum: 0
                  maxPrice:
                    type: integer
                    format: uint8
                    minimum: 0
                  externalLink:
                    type: string
                    format: uri
                    example: https://example.com
                  tags:
                    type: array
                    maxItems: 5
                    items:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: arts
                  orgId:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      summary: Partially update an event by its ID
      parameters:
        - name: id
          in: path
          description: ID of event to update
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      requestBody:
        description: Event fields to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  example: The Big Event
                bio:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: Come to the Big Event and have a good time!
                address:
                  type: string
                  minLength: 1
                  example: Frog Pond
                images:
                  type: array
                  items:
                    type: string
                    format: uri
                    example: https://example.com/image.png
                  minItems: 4
                  maxItems: 4
                minPrice:
                  type: integer
                  format: uint8
                  minimum: 0
                maxPrice:
                  type: integer
                  format: uint8
                  minimum: 0
                externalLink:
                  type: string
                  format: uri
                  example: https://example.com
                tags:
                  type: array
                  maxItems: 5
                  items:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: arts
                orgId:
                  type: string
                  format: uuid
                  example: 5e91507e-5630-4efd-9fd4-799178870b10
      responses:
        "200":
          description: Successfully updated event
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - bio
                  - address
                  - images
                  - minPrice
                  - tags
                  - orgId
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
                  name:
                    type: string
                    minLength: 1
                    example: The Big Event
                  bio:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: Come to the Big Event and have a good time!
                  address:
                    type: string
                    minLength: 1
                    example: Frog Pond
                  images:
                    type: array
                    items:
                      type: string
                      format: uri
                      example: https://example.com/image.png
                    minItems: 4
                    maxItems: 4
                  minPrice:
                    type: integer
                    format: uint8
                    minimum: 0
                  maxPrice:
                    type: integer
                    format: uint8
                    minimum: 0
                  externalLink:
                    type: string
                    format: uri
                    example: https://example.com
                  tags:
                    type: array
                    maxItems: 5
                    items:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: arts
                  orgId:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      summary: Update an event by its ID if it exists, else create it
      parameters:
        - name: id
          in: path
          description: ID of event to save
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      requestBody:
        description: Event to update
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - bio
                - address
                - images
                - minPrice
                - tags
                - orgId
              properties:
                name:
                  type: string
                  minLength: 1
                  example: The Big Event
                bio:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: Come to the Big Event and have a good time!
                address:
                  type: string
                  minLength: 1
                  example: Frog Pond
                images:
                  type: array
                  items:
                    type: string
                    format: uri
                    example: https://example.com/image.png
                  minItems: 4
                  maxItems: 4
                minPrice:
                  type: integer
                  format: uint8
                  minimum: 0
                maxPrice:
                  type: integer
                  format: uint8
                  minimum: 0
                externalLink:
                  type: string
                  format: uri
                  example: https://example.com
                tags:
                  type: array
                  maxItems: 5
                  items:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: arts
                orgId:
                  type: string
                  format: uuid
                  example: 5e91507e-5630-4efd-9fd4-799178870b10
      responses:
        "200":
          description: Successfully saved event
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - bio
                  - address
                  - images
                  - minPrice
                  - tags
                  - orgId
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
                  name:
                    type: string
                    minLength: 1
                    example: The Big Event
                  bio:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: Come to the Big Event and have a good time!
                  address:
                    type: string
                    minLength: 1
                    example: Frog Pond
                  images:
                    type: array
                    items:
                      type: string
                      format: uri
                      example: https://example.com/image.png
                    minItems: 4
                    maxItems: 4
                  minPrice:
                    type: integer
                    format: uint8
                    minimum: 0
                  maxPrice:
                    type: integer
                    format: uint8
                    minimum: 0
                  externalLink:
                    type: string
                    format: uri
                    example: https://example.com
                  tags:
                    type: array
                    maxItems: 5
                    items:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: arts
                  orgId:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
        "201":
          description: Successfully created event
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - bio
                  - address
                  - images
                  - minPrice
                  - tags
                  - orgId
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
                  name:
                    type: string
                    minLength: 1
                    example: The Big Event
                  bio:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: Come to the Big Event and have a good time!
                  address:
                    type: string
                    minLength: 1
                    example: Frog Pond
                  images:
                    type: array
                    items:
                      type: string
                      format: uri
                      example: https://example.com/image.png
                    minItems: 4
                    maxItems: 4
                  minPrice:
                    type: integer
                    format: uint8
                    minimum: 0
                  maxPrice:
                    type: integer
                    format: uint8
                    minimum: 0
                  externalLink:
                    type: string
                    format: uri
                    example: https://example.com
                  tags:
                    type: array
                    maxItems: 5
                    items:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: arts
                  orgId:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
        "400":
          $ref: "#/components/responses/BadRequest"
  /events/swipes:
    post:
      summary: Create a swipe between a user and an event
      requestBody:
        description: EventSwipe to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventSwipe"
      responses:
        "201":
          description: Successfully created event swipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventSwipe"
        "400":
          $ref: "#/components/responses/BadRequest"
  /health-check:
    get:
      summary: Check if the server is running and servicing requests
      responses:
        "200":
          description: The server is healthy
  /orgs:
    get:
      summary: Get multiple organizations
      parameters:
        - name: limit
          in: query
          description: The number of organizations to return
          schema:
            type: integer
            format: uint8
            minimum: 1
            default: 10
            example: 20
        - name: offset
          in: query
          description: The number of organizations to skip
          schema:
            type: integer
            format: uint32
            default: 0
            example: 13
      responses:
        "200":
          description: Successfully retrieved organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - name
                    - bio
                    - images
                    - tags
                  properties:
                    id:
                      type: string
                      format: uuid
                      example: 5e91507e-5630-4efd-9fd4-799178870b10
                    name:
                      type: string
                      minLength: 1
                      example: The Events Company
                    bio:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: We connect people through events
                    images:
                      type: array
                      items:
                        type: string
                        format: uri
                        example: https://example.com/image.png
                      minItems: 1
                      maxItems: 4
                    tags:
                      type: array
                      maxItems: 5
                      items:
                        type: string
                        minLength: 1
                        maxLength: 255
                        example: nonprofit
    post:
      summary: Create a new organization
      requestBody:
        description: Organization to create
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - bio
                - images
                - tags
              properties:
                name:
                  type: string
                  minLength: 1
                  example: The Events Company
                bio:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: We connect people through events
                images:
                  type: array
                  items:
                    type: string
                    format: uri
                    example: https://example.com/image.png
                  minItems: 1
                  maxItems: 4
                tags:
                  type: array
                  maxItems: 5
                  items:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: nonprofit
      responses:
        "201":
          description: Successfully created organization
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - bio
                  - images
                  - tags
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
                  name:
                    type: string
                    minLength: 1
                    example: The Events Company
                  bio:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: We connect people through events
                  images:
                    type: array
                    items:
                      type: string
                      format: uri
                      example: https://example.com/image.png
                    minItems: 1
                    maxItems: 4
                  tags:
                    type: array
                    maxItems: 5
                    items:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: nonprofit
        "400":
          $ref: "#/components/responses/BadRequest"
  /orgs/{id}:
    delete:
      summary: Delete an organization by its ID
      parameters:
        - name: id
          in: path
          description: ID of organization to delete
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      responses:
        "200":
          description: Successfully deleted organization
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - bio
                  - images
                  - tags
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
                  name:
                    type: string
                    minLength: 1
                    example: The Events Company
                  bio:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: We connect people through events
                  images:
                    type: array
                    items:
                      type: string
                      format: uri
                      example: https://example.com/image.png
                    minItems: 1
                    maxItems: 4
                  tags:
                    type: array
                    maxItems: 5
                    items:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: nonprofit
        "404":
          $ref: "#/components/responses/NotFound"
    get:
      summary: Get an organization by its ID
      parameters:
        - name: id
          in: path
          description: ID of organization to retrieve
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      responses:
        "200":
          description: Successfully retrieved organization
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - bio
                  - images
                  - tags
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
                  name:
                    type: string
                    minLength: 1
                    example: The Events Company
                  bio:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: We connect people through events
                  images:
                    type: array
                    items:
                      type: string
                      format: uri
                      example: https://example.com/image.png
                    minItems: 1
                    maxItems: 4
                  tags:
                    type: array
                    maxItems: 5
                    items:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: nonprofit
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      summary: Partially update an organization by its ID
      parameters:
        - name: id
          in: path
          description: ID of organization to update
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      requestBody:
        description: Organization fields to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  example: The Events Company
                bio:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: We connect people through events
                images:
                  type: array
                  items:
                    type: string
                    format: uri
                    example: https://example.com/image.png
                  minItems: 1
                  maxItems: 4
                tags:
                  type: array
                  maxItems: 5
                  items:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: nonprofit
      responses:
        "200":
          description: Successfully updated organization
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - bio
                  - images
                  - tags
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
                  name:
                    type: string
                    minLength: 1
                    example: The Events Company
                  bio:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: We connect people through events
                  images:
                    type: array
                    items:
                      type: string
                      format: uri
                      example: https://example.com/image.png
                    minItems: 1
                    maxItems: 4
                  tags:
                    type: array
                    maxItems: 5
                    items:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: nonprofit
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      summary: Update an organization by its ID if it exists, else create it
      parameters:
        - name: id
          in: path
          description: ID of organization to save
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      requestBody:
        description: Organization to update
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - bio
                - images
                - tags
              properties:
                name:
                  type: string
                  minLength: 1
                  example: The Events Company
                bio:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: We connect people through events
                images:
                  type: array
                  items:
                    type: string
                    format: uri
                    example: https://example.com/image.png
                  minItems: 1
                  maxItems: 4
                tags:
                  type: array
                  maxItems: 5
                  items:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: nonprofit
      responses:
        "200":
          description: Successfully saved organization
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - bio
                  - images
                  - tags
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 5e91507e-5630-4efd-9fd4-799178870b10
                  name:
                    type: string
                    minLength: 1
                    example: The Events Company
                  bio:
                    type: string
                    minLength: 1
                    maxLength: 255
                    example: We connect people through events
                  images:
                    type: array
                    items:
                      type: string
                      format: uri
                      example: https://example.com/image.png
                    minItems: 1
                    maxItems: 4
                  tags:
                    type: array
                    maxItems: 5
                    items:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: nonprofit
        "400":
          $ref: "#/components/responses/BadRequest"
  /users:
    get:
      summary: Get multiple users
      parameters:
        - name: limit
          in: query
          description: The number of users to return
          schema:
            type: integer
            format: uint8
            minimum: 1
            default: 10
            example: 20
        - name: offset
          in: query
          description: The number of users to skip
          schema:
            type: integer
            format: uint32
            default: 0
            example: 13
      responses:
        "200":
          description: Successfully retrieved users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create a new user
      requestBody:
        description: User to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserNoId"
      responses:
        "201":
          description: Successfully created user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/BadRequest"
  /users/{id}:
    delete:
      summary: Delete a user by its ID
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      responses:
        "200":
          description: Successfully deleted user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"
    get:
      summary: Get a user by its ID
      parameters:
        - name: id
          in: path
          description: ID of user to retrieve
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      responses:
        "200":
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      summary: Partially update a user by its ID
      parameters:
        - name: id
          in: path
          description: ID of user to update
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      requestBody:
        description: User fields to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserNoRequired"
      responses:
        "200":
          description: Successfully updated user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      summary: Update a user by its ID if it exists, else create it
      parameters:
        - name: id
          in: path
          description: ID of user to update
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      requestBody:
        description: User to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Successfully saved user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/BadRequest"
  /users/swipes:
    post:
      summary: Create a swipe between users
      requestBody:
        description: UserSwipe to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSwipe"
      responses:
        "201":
          description: Successfully created user swipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSwipe"
        "400":
          $ref: "#/components/responses/BadRequest"

  /recommendation/events:
    get:
      summary: "Get recommended events for a user"
      parameters:
        - name: userId
          in: query
          required: true
          description: The ID of the user for whom to get event recommendations
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          required: false
          description: Limit the number of event recommendations
          schema:
            type: integer
            format: int
            minimum: 1
            default: 10
        - name: offset
          in: query
          required: false
          description: The number of events to skip
          schema:
            type: integer
            format: int
            default: 0
        - name: like
          in: query
          required: false
          description: Filter events liked by the user
          schema:
            type: boolean
            deafult: false
        - name: tags
          in: query
          required: false
          description: Filter events by the tags
          schema:
            type: array
            items:
              type: string
        - name: date
          in: query
          required: false
          description: Filter events by upcoming datae
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Successfully retrieved events
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - properties:
                        id:
                          type: string
                          format: uuid
                          example: 5e91507e-5630-4efd-9fd4-799178870b10
                    - $ref: "#/components/schemas/Event"
                    - required:
                        - id
                        - name
                        - bio
  /recommendations/users:
    get:
      summary: Get user recommendations for a user
      parameters:
        - name: userId
          in: query
          required: true
          description: The ID of the user for whom to get user recommendations
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          required: false
          description: The number of users to return
          schema:
            type: integer
            format: int
            minimum: 1
            default: 10
        - name: offset
          in: query
          required: false
          description: The number of users to skip
          schema:
            type: integer
            format: int
            default: 0
      responses:
        "200":
          description: Successfully retrieved users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /matches/{id}:
    get:
      summary: Get a user's matches
      parameters:
        - name: id
          in: path
          description: ID of user to get matches of
          required: true
          schema:
            type: string
            format: uuid
            example: 5e91507e-5630-4efd-9fd4-799178870b10
      responses:
        "200":
          description: Successfully retrieved matches
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/UserNoRequired"
                    - type: object
                      properties:
                        commonEvents:
                          type: array
                          items:
                            type: string
                            format: uuid
                          description: IDs of the events that both users have
                  type: object
                  required:
                    - id
                    - createdAt
                    - updatedAt
                    - firstName
                    - lastName
                    - age
                    - bio
                    - images
                    - viewed
                  properties:
                    id:
                      type: string
                      format: uuid
                      example: 5e91507e-5630-4efd-9fd4-799178870b10
                    createdAt:
                      type: string
                      format: date-time
                      example: "2018-03-20T09:12:28Z"
                    updatedAt:
                      type: string
                      format: date-time
                      example: "2018-03-20T09:12:28Z"
                    firstName:
                      type: string
                      minLength: 1
                      example: Bob
                    lastName:
                      type: string
                      minLength: 1
                      example: Smith
                    age:
                      type: integer
                      format: uint8
                      minimum: 18
                      example: 22
                    bio:
                      type: string
                      minLength: 1
                      maxLength: 255
                      example: Hello! I'm excited to experience events!
                    images:
                      type: array
                      items:
                        type: string
                        format: uri
                        example: https://example.com/image.png
                      minItems: 4
                      maxItems: 4
                    viewed:
                      type: boolean
components:
  responses:
    BadRequest:
      description: Invalid request body
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    UnexpectedError:
      description: An unexpected error occurred
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Preference:
      type: object
      required:
        - ageMin
        - ageMax
        - interestedIn
      properties:
        ageMin:
          type: integer
          format: uint8
          example: 18
        ageMax:
          type: integer
          format: uint8
          example: 30
        interestedIn:
          type: string
          enum: ["Men", "Women", "All"]
          example: "Men"
    User:
      type: object
      required:
        - id
        - firstName
        - lastName
        - age
        - bio
        - gender
        - images
        - preference
        - pronouns
        - location
        - school
        - work
        - height
        - promptQuestion
        - promptResponse
        - relationshipType
        - religion
        - politicalAffiliation
        - alcoholFrequency
        - smokingFrequency
        - drugsFrequency
        - cannabisFrequency
        - instagramUsername
      properties:
        id:
          type: string
          format: uuid
          example: 5e91507e-5630-4efd-9fd4-799178870b10
        firstName:
          type: string
          minLength: 1
          example: Bob
        lastName:
          type: string
          minLength: 1
          example: Smith
        preference:
          $ref: "#/components/schemas/Preference"
        age:
          type: integer
          format: uint8
          minimum: 18
          example: 22
        gender:
          type: string
          enum: ["Man", "Woman", "Other"]
          example: Man
        bio:
          type: string
          minLength: 1
          maxLength: 255
          example: Hello! I’m excited to experience events!
        images:
          type: array
          items:
            type: string
            format: uri
            example: https://example.com/image.png
          minItems: 4
          maxItems: 4
        pronouns:
          type: string
          minLength: 1
          example: He/Him
        location:
          type: string
          minLength: 1
          example: Roxbury
        school:
          type: string
          minLength: 1
          example: Northeastern University
        work:
          type: string
          minLength: 1
          example: Software Engineer at Couplet
        height:
          type: integer
          format: uint8
          minimum: 48
          example: 72
        promptQuestion:
          type: string
          minLength: 1
          example: What's your Fortnite event?
        promptResponse:
          type: string
          minLength: 1
          example: I'm a big fan of the Travis Scott Event
        relationshipType:
          type: string
          example: Monogamy
        religion:
          type: string
          example: Atheist
        politicalAffiliation:
          type: string
          example: Democrat
        alcoholFrequency:
          type: string
          example: Rarely
        smokingFrequency:
          type: string
          example: Never
        drugsFrequency:
          type: string
          example: Never
        cannabisFrequency:
          type: string
          example: Never
        instagramUsername:
          type: string
          minLength: 1
          example: bobsmith
    UserNoId:
      type: object
      required:
        - firstName
        - lastName
        - age
        - bio
        - gender
        - images
        - preference
        - pronouns
        - location
        - school
        - work
        - height
        - promptQuestion
        - promptResponse
        - relationshipType
        - religion
        - politicalAffiliation
        - alcoholFrequency
        - smokingFrequency
        - drugsFrequency
        - cannabisFrequency
        - instagramUsername
      properties:
        firstName:
          type: string
          minLength: 1
          example: Bob
        lastName:
          type: string
          minLength: 1
          example: Smith
        preference:
          $ref: "#/components/schemas/Preference"
        age:
          type: integer
          format: uint8
          minimum: 18
          example: 22
        gender:
          type: string
          enum: ["Man", "Woman", "Other"]
          example: Man
        bio:
          type: string
          minLength: 1
          maxLength: 255
          example: Hello! I’m excited to experience events!
        images:
          type: array
          items:
            type: string
            format: uri
            example: https://example.com/image.png
          minItems: 4
          maxItems: 4
        pronouns:
          type: string
          minLength: 1
          example: He/Him
        location:
          type: string
          minLength: 1
          example: Roxbury
        school:
          type: string
          minLength: 1
          example: Northeastern University
        work:
          type: string
          minLength: 1
          example: Software Engineer at Couplet
        height:
          type: integer
          format: uint8
          minimum: 48
          example: 72
        promptQuestion:
          type: string
          minLength: 1
          example: What's your Fortnite event?
        promptResponse:
          type: string
          minLength: 1
          example: I'm a big fan of the Travis Scott Event
        relationshipType:
          type: string
          example: Monogamy
        religion:
          type: string
          example: Atheist
        politicalAffiliation:
          type: string
          example: Democrat
        alcoholFrequency:
          type: string
          example: Rarely
        smokingFrequency:
          type: string
          example: Never
        drugsFrequency:
          type: string
          example: Never
        cannabisFrequency:
          type: string
          example: Never
        instagramUsername:
          type: string
          minLength: 1
          example: bobsmith
    UserNoRequired:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 5e91507e-5630-4efd-9fd4-799178870b10
        firstName:
          type: string
          minLength: 1
          example: Bob
        lastName:
          type: string
          minLength: 1
          example: Smith
        preference:
          $ref: "#/components/schemas/Preference"
        age:
          type: integer
          format: uint8
          minimum: 18
          example: 22
        gender:
          type: string
          enum: ["Man", "Woman", "Other"]
          example: Man
        bio:
          type: string
          minLength: 1
          maxLength: 255
          example: Hello! I’m excited to experience events!
        images:
          type: array
          items:
            type: string
            format: uri
            example: https://example.com/image.png
          minItems: 4
          maxItems: 4
        pronouns:
          type: string
          minLength: 1
          example: He/Him
        location:
          type: string
          minLength: 1
          example: Roxbury
        school:
          type: string
          minLength: 1
          example: Northeastern University
        work:
          type: string
          minLength: 1
          example: Software Engineer at Couplet
        height:
          type: integer
          format: uint8
          minimum: 48
          example: 72
        promptQuestion:
          type: string
          minLength: 1
          example: What's your Fortnite event?
        promptResponse:
          type: string
          minLength: 1
          example: I'm a big fan of the Travis Scott Event
        relationshipType:
          type: string
          example: Monogamy
        religion:
          type: string
          example: Atheist
        politicalAffiliation:
          type: string
          example: Democrat
        alcoholFrequency:
          type: string
          example: Rarely
        smokingFrequency:
          type: string
          example: Never
        drugsFrequency:
          type: string
          example: Never
        cannabisFrequency:
          type: string
          example: Never
        instagramUsername:
          type: string
          minLength: 1
          example: bobsmith
    Address:
      type: object
      required:
        - line1
        - zipCode
        - city
        - state
        - country
      properties:
        line1:
          type: string
          minLength: 1
          example: 360 Huntington Ave
        line2:
          type: string
          minLength: 1
          example: Room 270
        zipCode:
          type: string
          minLength: 5
          maxLength: 5
          example: 02115
        city:
          type: string
          minLength: 1
          example: Boston
        state:
          type: string
          minLength: 2
          maxLength: 2
          example: MA
        country:
          type: string
          minLength: 2
          maxLength: 2
          example: US
    Coordinate:
      type: object
      required:
        - longitude
        - latitude
      properties:
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
          example: 71.43
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
          example: 32.82
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: uint16
          minimum: 100
          maximum: 599
          example: 500
        message:
          type: string
          minLength: 1
          example: Internal server error
    Event:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          example: The Big Event
        date:
          type: string
          format: date
          example: "2024-01-01"
        bio:
          type: string
          minLength: 1
          example: Come to the Big Event and have the best night of your life!
        address:
          $ref: "#/components/schemas/Address"
        images:
          type: array
          items:
            type: string
            format: uri
            example: https://example.com/image.png
          minItems: 1
          maxItems: 5
        externalLink:
          type: string
          format: uri
          example: https://example.com
        tags:
          type: array
          maxItems: 5
          items:
            type: string
            minLength: 1
            maxLength: 255
            example: arts
        orgId:
          type: string
          format: uuid
          example: 5e91507e-5630-4efd-9fd4-799178870b10
    Org:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          example: The Events Company
        bio:
          type: string
          minLength: 1
          example: At The Events Company, we connect people through events
        image:
          type: string
          format: uri
          example: https://example.com/image.png
        tags:
          type: array
          maxItems: 5
          items:
            type: string
            minLength: 1
            maxLength: 255
            example: nonprofit
    EventSwipe:
      type: object
      required:
        - userId
        - eventId
        - liked
      properties:
        userId:
          type: string
          format: uuid
          example: 5e91507e-5630-4efd-9fd4-799178870b10
        eventId:
          type: string
          format: uuid
          example: 5e91507e-5630-4efd-9fd4-799178870b10
        liked:
          type: boolean
          example: true
    UserSwipe:
      type: object
      required:
        - userId
        - otherUserId
        - liked
      properties:
        userId:
          type: string
          format: uuid
          example: 5e91507e-5630-4efd-9fd4-799178870b10
        otherUserId:
          type: string
          format: uuid
          example: 5e91507e-5630-4efd-9fd4-799178870b10
        liked:
          type: boolean
          example: true
